geom_text(aes(label = round(after_stat(y),0), group = region),
stat = 'summary', fun = sum, hjust = -.5, size=2.5) +
geom_bar(stat="identity")  +   coord_flip() +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 0, hjust=.5)) +
labs(title="(B) Aggregate Cost for Regions By Asset Cost Type",
fill="Cost\nType",
subtitle = "Based on 50 GB/Month in EMEs and AEs, and 40 GB/Month in LIDCs",
x=NULL, y='Investment Cost ($Bn)') +
scale_y_continuous(expand = c(0, 0), limits=c(0,190)) +
scale_fill_viridis_d(direction=-1) +
guides(fill = guide_legend(reverse=T))
write.csv(data, file.path(folder, 'final_data', 'fig_6b_aggregated_regions.csv'))
aggregated_costs <- ggarrange(plot1, plot2,
ncol = 1, nrow = 2, align = c("hv"),
common.legend = TRUE, legend='bottom',
heights=c(.65,1))
path = file.path(folder, 'figures', 'aggregated_costs.tiff')
tiff(path, units="in", width=8, height=4.5, res=300)
print(aggregated_costs)
dev.off()
library(dplyr)
library(ggplot2)
library(ggpubr)
library(tidyr)
library(readxl)
library(lemon)
ggplot(data, aes(x=decile, y=value, fill=region, group=region)) +
geom_text(aes(label = round(after_stat(y),0), group = decile),
stat = 'summary', fun = sum, vjust = -.5, size=2.5) +
geom_bar(stat="identity")  +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 15, hjust=1)) +
labs(title="(A) Population by Density Deciles for Income Groups and Regions",
fill="Region",
subtitle = bquote("Aggregated from WorldPop Global Mosaic 1 km^2 (2020)"),
x="Population Density Decile \n(Decile 1 is the most densely populated, Decile 10 is the least densely populated)",
y='Population (Millions)') +
scale_y_continuous(expand = c(0, 0), limits=c(0,1800)) +#
scale_fill_viridis_d() + #direction = -1
facet_wrap(~income_group) #direction = -1
library(dplyr)
library(ggplot2)
library(ggpubr)
library(tidyr)
library(readxl)
library(lemon)
install.packages('lemon')
library(lemon)
####################POPULATION
folder <- dirname(rstudioapi::getSourceEditorContext()$path)
#mobile capex
path = file.path(folder, '..', "Oughton et al. (2023) DICE v1.0.0.xlsx")
data <- read_excel(path, sheet = "Pop", col_names = T)
ggplot(data, aes(x=decile, y=value, fill=region, group=region)) +
geom_text(aes(label = round(after_stat(y),0), group = decile),
stat = 'summary', fun = sum, vjust = -.5, size=2.5) +
geom_bar(stat="identity")  +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 15, hjust=1)) +
labs(title="(A) Population by Density Deciles for Income Groups and Regions",
fill="Region",
subtitle = bquote("Aggregated from WorldPop Global Mosaic 1 km^2 (2020)"),
x="Population Density Decile \n(Decile 1 is the most densely populated, Decile 10 is the least densely populated)",
y='Population (Millions)') +
scale_y_continuous(expand = c(0, 0), limits=c(0,1800)) +#
scale_fill_viridis_d() + #direction = -1
facet_wrap(~income_group) #direction = -1
folder <- dirname(rstudioapi::getSourceEditorContext()$path)
#mobile capex
path = file.path(folder, '..', "Oughton et al. (2023) DICE v1.0.0.xlsx")
data <- read_excel(path, sheet = "Pop", col_names = T)
####################POPULATION
folder <- dirname(rstudioapi::getSourceEditorContext()$path)
#mobile capex
path = file.path(folder, '..', "Oughton et al. (2023) DICE v1.0.0.xlsx")
data <- read_excel(path, sheet = "Pop", col_names = T)
####################POPULATION
folder <- dirname(rstudioapi::getSourceEditorContext()$path)
#mobile capex
path = file.path(folder, '..', "Oughton et al. (2023) DICE v1.0.0.xlsx")
data <- read_excel(path, sheet = "Pop", col_names = T)
data$ISO3 = NULL
data$`country_name` = NULL
data$`Population Sum` = NULL
colnames(data)[3] <- "1"
colnames(data)[4] <- "2"
colnames(data)[5] <- "3"
colnames(data)[6] <- "4"
colnames(data)[7] <- "5"
colnames(data)[8] <- "6"
colnames(data)[9] <- "7"
colnames(data)[10] <- "8"
colnames(data)[11] <- "9"
colnames(data)[12] <- "10"
data = data[!(data$`Income Group`=="-"),]
names(data)[names(data) == 'Income Group'] <- 'income_group'
# data$Region = NULL
names(data)[names(data) == 'Region'] <- 'region'
data = data %>% gather(decile, value, (3:12))
data$value <- as.numeric(data$value)
data$decile = factor(data$decile,
levels=c(1,2,3,4,5,6,7,8,9,10),
labels=c('1','2','3','4','5','6','7','8','9','10')
)
data$income_group = factor(data$income_group,
levels=c(
'Low Income Developing Countries',
'Emerging Market Economies',
'Advanced Economies'))
data$value = data$value / 1e6
ggplot(data, aes(x=decile, y=value, fill=region, group=region)) +
geom_text(aes(label = round(after_stat(y),0), group = decile),
stat = 'summary', fun = sum, vjust = -.5, size=2.5) +
geom_bar(stat="identity")  +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 15, hjust=1)) +
labs(title="(A) Population by Density Deciles for Income Groups and Regions",
fill="Region",
subtitle = bquote("Aggregated from WorldPop Global Mosaic 1 km^2 (2020)"),
x="Population Density Decile \n(Decile 1 is the most densely populated, Decile 10 is the least densely populated)",
y='Population (Millions)') +
scale_y_continuous(expand = c(0, 0), limits=c(0,1800)) +#
scale_fill_viridis_d() + #direction = -1
facet_wrap(~income_group) #direction = -1
source("C:/Users/eoughton/Dropbox/Academic Projects/matt_sprintson_broadband_macro/dice_vis/vis_scripts/vis.r", echo=TRUE)
source("C:/Users/eoughton/Dropbox/Academic Projects/matt_sprintson_broadband_macro/dice_vis/vis_scripts/vis.r", echo=TRUE)
source("C:/Users/eoughton/Dropbox/Academic Projects/matt_sprintson_broadband_macro/dice_vis/vis_scripts/vis.r", echo=TRUE)
source("C:/Users/eoughton/Dropbox/Academic Projects/matt_sprintson_broadband_macro/dice_vis/vis_scripts/vis.r", echo=TRUE)
source("C:/Users/eoughton/Dropbox/Academic Projects/matt_sprintson_broadband_macro/dice_vis/vis_scripts/vis.r", echo=TRUE)
source("C:/Users/eoughton/Desktop/Github/saleos/vis/capacity.r", echo=TRUE)
source("C:/Users/eoughton/Desktop/Github/saleos/vis/capacity.r", echo=TRUE)
source("C:/Users/eoughton/Desktop/Github/saleos/vis/cost.R", echo=TRUE)
library(ggpubr)
library(ggplot2)
library(tidyverse)
# install.packages("ggtext")
library(ggtext)
# Set default folder
folder <- dirname(rstudioapi::getSourceEditorContext()$path)
#Load the data
folder <- dirname(rstudioapi::getSourceEditorContext()$path)
data <- read.csv(file.path(folder, '..', 'results', "interim_results.csv"))
##############################
##Channel capacity with Bars##
##############################
df = data %>%
group_by(constellation, cnr_scenario) %>%
summarize(mean = mean(channel_capacity),
sd = sd(channel_capacity))
View(data)
View(df)
library(ggpubr)
library(ggplot2)
library(tidyverse)
# install.packages("ggtext")
library(ggtext)
# Set default folder
folder <- dirname(rstudioapi::getSourceEditorContext()$path)
#Load the data
folder <- dirname(rstudioapi::getSourceEditorContext()$path)
data <- read.csv(file.path(folder, '..', 'results', "interim_results.csv"))
##############################
##Channel capacity with Bars##
##############################
df = data %>%
group_by(constellation, cnr_scenario) %>%
summarize(mean = mean(channel_capacity),
sd = sd(channel_capacity))
df$cnr_scenario = as.factor(df$cnr_scenario)
df$Constellation = factor(df$constellation)
df$CNR = factor(
df$cnr_scenario,
levels = c('Low (<7.5 dB)', 'Baseline(7.6 - 10.5 dB)', 'High(>13.5 dB)'),
labels = c('Low', 'Baseline', 'High')
)
df = data %>%
group_by(constellation, cnr_scenario) %>%
summarize(mean = mean(channel_capacity),
sd = sd(channel_capacity))
df$cnr_scenario = as.factor(df$cnr_scenario)
df$Constellation = factor(df$constellation)
df$CNR = factor(
df$cnr_scenario,
levels = c('Low (<7.5 dB)', 'Baseline(7.6 - 10.5 dB)', 'High(>13.5 dB)'),
labels = c('Low', 'Baseline', 'High')
)
View(df)
############################
## Fuel and emissions plots
############################
folder <- dirname(rstudioapi::getSourceEditorContext()$path)
data <- read.csv(file.path(folder, '..', 'results', "final_results.csv"))
# Variables to Consider
data <-
select(
data,
constellation,
constellation_capacity,
subscriber_scenario,
impact_category,
per_subscriber_emission,
total_emissions,
total_climate_emissions,
total_climate_emissions_wc,
monthly_gb,
)
fuel <- c("Kerosene",
"Kerosene",
"Hypergolic",
"Kerosene",
"Solid",
"Cryogenic",
"Hypergolic")
rockets <-
c(
"Starlink \n(Falcon-9)",
"OneWeb \n(Soyuz-FG & \nFalcon-9)",
"OneWeb \n(Soyuz-FG & \nFalcon-9)",
"OneWeb \n(Soyuz-FG & \nFalcon-9)",
"Kuiper \n(Ariane-5)",
"Kuiper \n(Ariane-5)",
"Kuiper \n(Ariane-5)")
amount <- c(500000*74, 218150*11, 7360*11, 500000*7, 10000*54, 480000*54, 184900*54)
fuels_df <- data.frame(rockets, fuel, amount)
############################
## Fuel quantities
############################
totals <- fuels_df %>%
group_by(rockets) %>%
summarize(value = signif(sum(amount / 1e6), 2))
fuel_types = ggplot(fuels_df, aes(x = rockets, y = amount / 1e6)) +
geom_bar(stat = "identity", aes(fill = fuel)) +
geom_text(
aes(
x = rockets,
y = value,
label = round(after_stat(y), 2)
),
size = 1.5,
data = totals,
vjust = -1.8,
hjust = 0.5,
position = position_stack()
) +
scale_fill_brewer(palette = "Dark2") + labs(
colour = NULL,
title = "a",
subtitle = " ",
x = NULL,
y = "Fuel Quantity (Mt)",
fill = "Fuel"
) +
scale_y_continuous(
labels = function(y)
format(y,
scientific = FALSE),
expand = c(0, 0),
limits = c(0, 50)
) +
theme_minimal() + theme(
strip.text.x = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(size = 6),
axis.text.y = element_text(size = 6),
axis.title.y = element_text(size = 6),
axis.line.x  = element_line(size = 0.15),
axis.line.y  = element_line(size = 0.15),
legend.direction = "horizontal",
legend.position = c(0.5, 0.9),
axis.title = element_text(size = 4),
legend.title = element_text(size = 4),
legend.text = element_text(size = 4),
plot.subtitle = element_text(size = 6),
plot.title = element_text(size = 8, face = "bold")) +
guides(fill = guide_legend(ncol = 4, nrow = 1))
###########################
## Emissions / subscriber##
###########################
df = data %>%
group_by(constellation, subscriber_scenario) %>%
summarize(
mean = mean(per_subscriber_emission / 1e3),
sd = sd(per_subscriber_emission / 1e3)
)
############################
## Fuel and emissions plots
############################
folder <- dirname(rstudioapi::getSourceEditorContext()$path)
data <- read.csv(file.path(folder, '..', 'results', "final_results.csv"))
# Variables to Consider
data <-
select(
data,
constellation,
constellation_capacity,
subscriber_scenario,
impact_category,
per_subscriber_emission,
total_emissions,
total_climate_emissions,
total_climate_emissions_wc,
monthly_gb,
)
fuel <- c("Kerosene",
"Kerosene",
"Hypergolic",
"Kerosene",
"Solid",
"Cryogenic",
"Hypergolic")
rockets <-
c(
"Starlink \n(Falcon-9)",
"OneWeb \n(Soyuz-FG & \nFalcon-9)",
"OneWeb \n(Soyuz-FG & \nFalcon-9)",
"OneWeb \n(Soyuz-FG & \nFalcon-9)",
"Kuiper \n(Ariane-5)",
"Kuiper \n(Ariane-5)",
"Kuiper \n(Ariane-5)")
amount <- c(500000*74, 218150*11, 7360*11, 500000*7, 10000*54, 480000*54, 184900*54)
fuels_df <- data.frame(rockets, fuel, amount)
############################
## Fuel quantities
############################
totals <- fuels_df %>%
group_by(rockets) %>%
summarize(value = signif(sum(amount / 1e6), 2))
fuel_types = ggplot(fuels_df, aes(x = rockets, y = amount / 1e6)) +
geom_bar(stat = "identity", aes(fill = fuel)) +
geom_text(
aes(
x = rockets,
y = value,
label = round(after_stat(y), 2)
),
size = 1.5,
data = totals,
vjust = -1.8,
hjust = 0.5,
position = position_stack()
) +
scale_fill_brewer(palette = "Dark2") + labs(
colour = NULL,
title = "a",
subtitle = " ",
x = NULL,
y = "Fuel Quantity (Mt)",
fill = "Fuel"
) +
scale_y_continuous(
labels = function(y)
format(y,
scientific = FALSE),
expand = c(0, 0),
limits = c(0, 50)
) +
theme_minimal() + theme(
strip.text.x = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(size = 6),
axis.text.y = element_text(size = 6),
axis.title.y = element_text(size = 6),
axis.line.x  = element_line(size = 0.15),
axis.line.y  = element_line(size = 0.15),
legend.direction = "horizontal",
legend.position = c(0.5, 0.9),
axis.title = element_text(size = 4),
legend.title = element_text(size = 4),
legend.text = element_text(size = 4),
plot.subtitle = element_text(size = 6),
plot.title = element_text(size = 8, face = "bold")) +
guides(fill = guide_legend(ncol = 4, nrow = 1))
###########################
## Emissions / subscriber##
###########################
df = data %>%
group_by(constellation, subscriber_scenario) %>%
summarize(
mean = mean(per_subscriber_emission / 1e3),
sd = sd(per_subscriber_emission / 1e3)
)
df$subscriber_scenario = as.factor(df$subscriber_scenario)
df$Constellation = factor(
df$constellation,
levels = c('Kuiper', 'OneWeb', 'Starlink'),
labels = c(
'Kuiper \n(Ariane-5)',
'OneWeb \n(Soyuz-FG & \nFalcon-9)',
'Starlink \n(Falcon-9)'
)
)
df$scenario = factor(
df$subscriber_scenario,
levels = c(
'subscribers_low',
'subscribers_baseline',
'subscribers_high'
),
labels = c('Low', 'Baseline', 'High')
)
emission_subscriber <- ggplot(df, aes(x = Constellation,
y = mean, fill = scenario)) +
geom_bar(stat = "identity",
position = position_dodge(),
View(df)
View(df)
df = data %>%
group_by(constellation, subscriber_scenario) %>%
summarize(
mean = mean(per_subscriber_emission / 1e3),
sd = sd(per_subscriber_emission / 1e3)
)
View(df)
df = data %>%
group_by(constellation, subscriber_scenario) %>%
summarize(
mean = mean(per_subscriber_emission / 1e3),
sd = sd(per_subscriber_emission / 1e3)
)
View(df)
df$subscriber_scenario = as.factor(df$subscriber_scenario)
df$Constellation = factor(
df$constellation,
levels = c('Kuiper', 'OneWeb', 'Starlink'),
labels = c(
'Kuiper \n(Ariane-5)',
'OneWeb \n(Soyuz-FG & \nFalcon-9)',
'Starlink \n(Falcon-9)'
)
)
View(df)
View(df)
###########################
## Emissions / subscriber##
###########################
df = data %>%
group_by(constellation, subscriber_scenario) %>%
summarize(
mean = mean(per_subscriber_emission / 1e3)#,
# sd = sd(per_subscriber_emission / 1e3)
)
df = data %>%
group_by(constellation, subscriber_scenario) %>%
summarize(
value = mean(per_subscriber_emission / 1e3)#,
# sd = sd(per_subscriber_emission / 1e3)
)
df$subscriber_scenario = as.factor(df$subscriber_scenario)
df$Constellation = factor(
df$constellation,
levels = c('Kuiper', 'OneWeb', 'Starlink'),
labels = c(
'Kuiper \n(Ariane-5)',
'OneWeb \n(Soyuz-FG & \nFalcon-9)',
'Starlink \n(Falcon-9)'
)
)
df$scenario = factor(
df$subscriber_scenario,
levels = c(
'subscribers_low',
'subscribers_baseline',
'subscribers_high'
),
labels = c('Low', 'Baseline', 'High')
)
ggplot(df, aes(x = Constellation,
y = value, fill = scenario)) +
geom_bar(stat = "identity",
position = position_dodge(),
width = 0.9) +
# geom_errorbar(
#   aes(ymin = mean - sd, ymax = mean + sd),
#   width = .2,
#   position = position_dodge(.9),
#   color = 'black',
#   size = 0.2
# ) +
scale_fill_brewer(palette = "Dark2") + theme_minimal() +
labs(
colour = NULL,
title = "b",
subtitle = " ",
x = NULL,
y = bquote("Emissions / Subscriber (t CO"["2"]~"eq)"),
fill = 'Scenario'
) + scale_y_continuous(
labels = function(y)
format(y, scientific = FALSE),
expand = c(0, 0)
) + theme_minimal() +
theme(
strip.text.x = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(size = 6),
axis.text.y = element_text(size = 6),
axis.title.y = element_text(size = 6),
legend.position = c(0.8, 0.85),
axis.title = element_text(size = 4),
legend.title = element_text(size = 4),
legend.text = element_text(size = 4),
axis.line.x  = element_line(size = 0.15),
axis.line.y  = element_line(size = 0.15),
plot.subtitle = element_text(size = 6),
plot.title = element_text(size = 8, face = "bold"))
